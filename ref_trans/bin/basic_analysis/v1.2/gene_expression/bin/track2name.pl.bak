#!/usr/bin/perl -w
use strict;
use Data::Dumper;

if (@ARGV != 2) {
	print "\n\tFunction: Extract geneID & isoformID to tracking ID list\n\n";
	print "\tUsage: perl track2name.pl <merge.gtf> <out_index>\n\n";
	exit;
}

my %gene_track2name;
my %iso_track2name;
my %newGene_track;
my %iso_gene_num;
#my $num=0;
my $gene='geneID';
my $iso='isoID';
open IN,"$ARGV[0]" || die $!;
while (<IN>) {
	chomp;
	next if (/^$/ || /^\#/);
	my @tmp = split/\t+/,$_;
	my @info = split/;/,$tmp[8];

	my ($gene_track,$geneID,$iso_track,$isoID,$class_code);
	if ($tmp[8]=~/class_code \"u\";/) {
		$tmp[8]=~/gene_id\s\"([^\"]+)\";\stranscript_id\s\"([^\"]+)\";\sexon_number/;
		$gene_track=$1;
		$iso_track=$2;
		$newGene_track{$gene_track}{$iso_track}=1;
		next;
	}

	next if ($tmp[8]!~/class_code\s\"j\"/ && $tmp[8]!~/class_code\s\"=\"/);
	next unless /gene_name/;
	$tmp[8]=~/gene_id\s\"([^\"]+)\";\stranscript_id\s\"([^\"]+)\";.*gene_name \"([^\"]+)\";.*oId \"([^\"]+)\";.*class_code \"([^\"]+)\";/ ;
	$gene_track=$1;
	$iso_track=$2;
	$geneID=$3;
	$isoID=$4;
	$class_code=$5;
	if ($gene ne $geneID) {
		$gene=$geneID;$iso=$iso_track;
		$iso_gene_num{$gene}++ if ($isoID=~/CUFF/) ;
		}
	if ($isoID=~/CUFF/ and $gene eq $geneID and $iso ne $iso_track) {$iso_gene_num{$gene}++;$iso=$iso_track;}


	$gene_track2name{$gene_track}{$geneID}{$iso_track}=1;
	$iso_track2name{$iso_track}{Class}=$class_code;
	$iso_track2name{$iso_track}{oId}=$isoID if ($isoID!~/CUFF/);
	$iso_track2name{$iso_track}{oId}=$geneID.'.new'.$iso_gene_num{$gene} if ($isoID=~/CUFF/);
}
close IN;

open OUT,">$ARGV[1].newGene.track.list" || die;
foreach my $gene_track (sort keys %newGene_track) {
	foreach my $iso_track (sort keys %{$newGene_track{$gene_track}}) {
		print OUT "$gene_track\t$iso_track\n";
	}
}
close OUT;

open OUT1,">$ARGV[1].track2name.list" || die $!;
foreach my $gene_track (sort keys %gene_track2name) {
	foreach my $gene_name (sort keys %{$gene_track2name{$gene_track}}) {
		foreach my $iso_track (sort keys %{$gene_track2name{$gene_track}{$gene_name}}) {
			print OUT1 "$gene_track\t$gene_name\t$iso_track\t$iso_track2name{$iso_track}{oId}\t$iso_track2name{$iso_track}{Class}\n";
		}
	}
}
close OUT1;

